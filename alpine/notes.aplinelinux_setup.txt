### install alpine linux to a specified partition

use a linux live cd to boot
make partitions with gparted (gpt)
/dev/sda1 efi
/dev/sda2 btrfs
/dev/sda3 btrfs
/dev/sda4 swap
and set /dev/sda3 with flag bios_grub with gparted
boot alpine linux cd
setup-alpine
apk add btrfs-progs grub grub-bios
modprobe btrfs
mount -t btrfs /dev/sda3 /mnt
setup-disk -m sys /mnt
grub-install --boot-directory=/mnt/boot /dev/sda
now reboot to check that it could boot alpine linux

### after modified grub config
#grub-mkconfig -o /boot/grub/grub.cfg



### setup wifi
# https://wiki.alpinelinux.org/wiki/Wi-Fi
ip link
apk add wpa_supplicant
rc-service wpa_supplicant start
wpa_supplicant -B -i wlan0 -c /etc/wpa_supplicant/wpa_supplicant.conf
udhcpc -i wlan0



### setup xfce
# https://wiki.alpinelinux.org/wiki/Xfce
# edit /etc/apk/repositories to add repos

## cat /etc/apk/repositories
##/media/cdrom/apks
#http://dl-cdn.alpinelinux.org/alpine/v3.18/main
#http://dl-cdn.alpinelinux.org/alpine/v3.18/community

#then
apk update

apk add xorg-server
# run setup-xorg-base is required
setup-xorg-base

apk add xfce4 xfce4-terminal xfce4-screensaver
# xfce4-screensaver may also be necessary just for screen locking after inactivity (with no screensaver enabled).
setup-devd udev

startx

### the other non-root users that want a graphical environment need the video and input groups:
# https://wiki.alpinelinux.org/wiki/Setting_up_a_new_user#Creating_a_new_user
# adduser '<username>' video
# adduser '<username>' input
# reboot or re-login may required

adduser creatxr video
adduser creatxr input

# getent group name_of_group
# or
# cat /etc/group | grep video
# cat /etc/group | grep input



### boot freebsd with grub

# it's success with vmware, using freebsd_ufs.
#menuentry "freebsd" {
#    insmod gpart_gpt
#    insmod ufs2
#    set root=(hd0,gpt2)
#    kfreebsd /boot/loader
#}


# it works with my laptop. the (hd0,gpt1) is my EFI partition.
#menuentry "freebsd_efi"{
#    insmod part_gpt
#    chainloader (hd0,gpt1)/EFI/freebsd/loader.efi
#}
